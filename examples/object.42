
model class Object
{
	fictive toString<CLASS>: String
	{
		fictive let reflect = Reflect<CLASS>;
		fictive let properties = String.fromArray(reflect.properties, ", ");
		ret stringf("%s { %s }", reflect.name, properties);
	}
}

procedure(int index): int
{
    ret index * 6;
}

wrap<SIZE>: &[SIZE]*int;

copy<DEST,SRC>: Reflect<DEST>.type;

alloc<SIZE>: *[SIZE]int;

print<...ARGS>
{
	over(ARGS){
		printSingle($);
	}
}

print(int arg) { let a = itoa(arg); write(1, a, len(a)); }


&[50]*int array = wrap(50);

array[0] = &HashSet<String>;